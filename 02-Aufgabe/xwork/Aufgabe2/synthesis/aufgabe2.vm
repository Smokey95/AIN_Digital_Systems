//
// Written by Synplify Pro 
// Product Version "S-2021.09M-SP1"
// Program "Synplify Pro", Mapper "map202109actsp1, Build 056R"
// Thu Dec  8 14:21:47 2022
//
// Source file index table:
// Object locations will have the form <file>:<line>
// file 0 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\std.vhd "
// file 1 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd\snps_haps_pkg.vhd "
// file 2 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\std1164.vhd "
// file 3 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\std_textio.vhd "
// file 4 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\numeric.vhd "
// file 5 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd\umr_capim.vhd "
// file 6 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\arith.vhd "
// file 7 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd2008\unsigned.vhd "
// file 8 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\vhd\hyperents.vhd "
// file 9 "\e:\00_git\02_study\disy\02-aufgabe\std_counter.vhd "
// file 10 "\e:\00_git\02_study\disy\02-aufgabe\sync_buffer.vhd "
// file 11 "\e:\00_git\02_study\disy\bib\lfsr_lib.vhd "
// file 12 "\e:\00_git\02_study\disy\01-aufgabe\hex4x7seg.vhd "
// file 13 "\e:\00_git\02_study\disy\02-aufgabe\sync_module.vhd "
// file 14 "\e:\00_git\02_study\disy\02-aufgabe\aufgabe2.vhd "
// file 15 "\d:\microchip\libero_soc_v2022.2\synplifypro\lib\nlconst.dat "
// file 16 "\e:\00_git\02_study\disy\02-aufgabe\xwork\aufgabe2\designer\aufgabe2\synthesis.fdc "

`timescale 100 ps/100 ps
module hex4x7seg (
  digi_c,
  rst_c,
  clk_c,
  rst_arst
)
;
output [4:1] digi_c ;
input rst_c ;
input clk_c ;
input rst_arst ;
wire rst_c ;
wire clk_c ;
wire rst_arst ;
wire [13:0] reg_Z;
wire [8:1] reg_8;
wire [1:0] sel_Z;
wire [1:0] sel_RNO_Z;
wire strb_Z ;
wire VCC ;
wire un1_reg ;
wire GND ;
wire un1_reg_6 ;
wire un1_reg_9 ;
wire un1_reg_8 ;
wire un1_reg_7 ;
// @12:40
  SLE strb (
	.Q(strb_Z),
	.ADn(VCC),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(un1_reg),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[9]  (
	.Q(reg_Z[9]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[8]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[8]  (
	.Q(reg_Z[8]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_8[8]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[7]  (
	.Q(reg_Z[7]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[6]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[6]  (
	.Q(reg_Z[6]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_8[6]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[5]  (
	.Q(reg_Z[5]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[4]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[4]  (
	.Q(reg_Z[4]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[3]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[3]  (
	.Q(reg_Z[3]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[2]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[2]  (
	.Q(reg_Z[2]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[1]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[1]  (
	.Q(reg_Z[1]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_8[1]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[0]  (
	.Q(reg_Z[0]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[13]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:79
  SLE \sel[1]  (
	.Q(sel_Z[1]),
	.ADn(VCC),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(sel_RNO_Z[1]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:79
  SLE \sel[0]  (
	.Q(sel_Z[0]),
	.ADn(VCC),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(sel_RNO_Z[0]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[13]  (
	.Q(reg_Z[13]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[12]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[12]  (
	.Q(reg_Z[12]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[11]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[11]  (
	.Q(reg_Z[11]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[10]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:40
  SLE \reg[10]  (
	.Q(reg_Z[10]),
	.ADn(GND),
	.ALn(rst_arst),
	.CLK(clk_c),
	.D(reg_Z[9]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @12:49
  CFG2 \p1.un1_reg_6  (
	.A(reg_Z[13]),
	.B(reg_Z[11]),
	.Y(un1_reg_6)
);
defparam \p1.un1_reg_6 .INIT=4'h8;
// @12:88
  CFG2 \sel_RNO[0]  (
	.A(sel_Z[0]),
	.B(strb_Z),
	.Y(sel_RNO_Z[0])
);
defparam \sel_RNO[0] .INIT=4'h6;
// @12:65
  CFG2 \p1.reg_8[1]  (
	.A(reg_Z[13]),
	.B(reg_Z[0]),
	.Y(reg_8[1])
);
defparam \p1.reg_8[1] .INIT=4'h6;
// @12:63
  CFG2 \p1.reg_8[6]  (
	.A(reg_Z[13]),
	.B(reg_Z[5]),
	.Y(reg_8[6])
);
defparam \p1.reg_8[6] .INIT=4'h6;
// @12:61
  CFG2 \p1.reg_8[8]  (
	.A(reg_Z[13]),
	.B(reg_Z[7]),
	.Y(reg_8[8])
);
defparam \p1.reg_8[8] .INIT=4'h6;
// @12:49
  CFG4 \p1.un1_reg_9  (
	.A(reg_Z[12]),
	.B(reg_Z[10]),
	.C(reg_Z[9]),
	.D(reg_Z[8]),
	.Y(un1_reg_9)
);
defparam \p1.un1_reg_9 .INIT=16'h8000;
// @12:49
  CFG4 \p1.un1_reg_8  (
	.A(reg_Z[7]),
	.B(reg_Z[6]),
	.C(reg_Z[5]),
	.D(reg_Z[4]),
	.Y(un1_reg_8)
);
defparam \p1.un1_reg_8 .INIT=16'h8000;
// @12:49
  CFG4 \p1.un1_reg_7  (
	.A(reg_Z[3]),
	.B(reg_Z[2]),
	.C(reg_Z[1]),
	.D(reg_Z[0]),
	.Y(un1_reg_7)
);
defparam \p1.un1_reg_7 .INIT=16'h8000;
// @12:104
  CFG3 \ena[2]  (
	.A(sel_Z[1]),
	.B(sel_Z[0]),
	.C(rst_c),
	.Y(digi_c[3])
);
defparam \ena[2] .INIT=8'h20;
// @12:104
  CFG3 \ena[0]  (
	.A(sel_Z[1]),
	.B(sel_Z[0]),
	.C(rst_c),
	.Y(digi_c[1])
);
defparam \ena[0] .INIT=8'h10;
// @12:88
  CFG3 \sel_RNO[1]  (
	.A(strb_Z),
	.B(sel_Z[1]),
	.C(sel_Z[0]),
	.Y(sel_RNO_Z[1])
);
defparam \sel_RNO[1] .INIT=8'h6C;
// @12:104
  CFG3 \ena[1]  (
	.A(sel_Z[1]),
	.B(sel_Z[0]),
	.C(rst_c),
	.Y(digi_c[2])
);
defparam \ena[1] .INIT=8'h40;
// @12:104
  CFG3 \ena[3]  (
	.A(sel_Z[1]),
	.B(sel_Z[0]),
	.C(rst_c),
	.Y(digi_c[4])
);
defparam \ena[3] .INIT=8'h80;
// @12:49
  CFG4 \p1.un1_reg  (
	.A(un1_reg_9),
	.B(un1_reg_8),
	.C(un1_reg_7),
	.D(un1_reg_6),
	.Y(un1_reg)
);
defparam \p1.un1_reg .INIT=16'h8000;
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* hex4x7seg */

module aufgabe2 (
  rst,
  clk,
  btn,
  sw,
  digi,
  seg,
  dp,
  LD1,
  LD2
)
;
input rst ;
input clk ;
input [4:1] btn ;
input [8:1] sw ;
output [4:1] digi ;
output [7:1] seg ;
output dp ;
output LD1 ;
output LD2 ;
wire rst ;
wire clk ;
wire dp ;
wire LD1 ;
wire LD2 ;
wire [4:4] btn_c;
wire [4:1] digi_c;
wire [4:4] btn_c_i;
wire GND ;
wire rst_arst ;
wire VCC ;
wire rst_c ;
wire clk_c ;
wire clk_ibuf_Z ;
  CLKINT clk_ibuf_RNIVTI2 (
	.Y(clk_c),
	.A(clk_ibuf_Z)
);
  CLKINT rst_ibuf_RNIUUM5 (
	.Y(rst_arst),
	.A(rst_c)
);
  CFG1 LD2_obuf_RNO (
	.A(btn_c[4]),
	.Y(btn_c_i[4])
);
defparam LD2_obuf_RNO.INIT=2'h1;
// @14:6
  INBUF rst_ibuf (
	.Y(rst_c),
	.PAD(rst)
);
// @14:7
  INBUF clk_ibuf (
	.Y(clk_ibuf_Z),
	.PAD(clk)
);
// @14:8
  INBUF \btn_ibuf[4]  (
	.Y(btn_c[4]),
	.PAD(btn[4])
);
// @14:10
  OUTBUF \digi_obuf[1]  (
	.PAD(digi[1]),
	.D(digi_c[1])
);
// @14:10
  OUTBUF \digi_obuf[2]  (
	.PAD(digi[2]),
	.D(digi_c[2])
);
// @14:10
  OUTBUF \digi_obuf[3]  (
	.PAD(digi[3]),
	.D(digi_c[3])
);
// @14:10
  OUTBUF \digi_obuf[4]  (
	.PAD(digi[4]),
	.D(digi_c[4])
);
// @14:11
  OUTBUF \seg_obuf[1]  (
	.PAD(seg[1]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[2]  (
	.PAD(seg[2]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[3]  (
	.PAD(seg[3]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[4]  (
	.PAD(seg[4]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[5]  (
	.PAD(seg[5]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[6]  (
	.PAD(seg[6]),
	.D(VCC)
);
// @14:11
  OUTBUF \seg_obuf[7]  (
	.PAD(seg[7]),
	.D(GND)
);
// @14:12
  OUTBUF dp_obuf (
	.PAD(dp),
	.D(GND)
);
// @14:13
  OUTBUF LD1_obuf (
	.PAD(LD1),
	.D(GND)
);
// @14:14
  OUTBUF LD2_obuf (
	.PAD(LD2),
	.D(btn_c_i[4])
);
// @14:107
  hex4x7seg u3 (
	.digi_c(digi_c[4:1]),
	.rst_c(rst_c),
	.clk_c(clk_c),
	.rst_arst(rst_arst)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* aufgabe2 */

